name: CI/CD Pipeline with Advanced Features

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Run Tests & Security Scan
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Run linting
      run: npx eslint src/ tests/ --fix --quiet
      
    - name: Test coverage
      run: npm test -- --coverage
      
    - name: Security scanning with npm audit
      run: |
        echo "üîí Running security audit..."
        npm audit --audit-level moderate
      continue-on-error: true  # Don't fail build for audit warnings
      
    - name: Build performance timing
      run: |
        echo "‚è±Ô∏è Timing build performance..."
        time npm install
        echo "üì¶ Dependency installation completed"
        
    - name: Check bundle size
      run: |
        echo "üìä Checking bundle sizes..."
        du -sh node_modules/ | awk '{print "Node modules size: "$1}'
        du -sh src/ | awk '{print "Source code size: "$1}'
        echo "File count:"
        find src/ -name "*.js" | wc -l | awk '{print "JavaScript files: "$1}'
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.node-version }}
        path: coverage/

  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install Railway CLI
      run: npm install -g @railway/cli
      
    - name: Deploy to Railway
      id: deploy
      run: railway up --service my-ci-cd-app
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        
    - name: Run post-deployment tests
      run: |
        echo "üß™ Testing deployed application..."
        sleep 30  # Wait for deployment to complete
        curl -f https://my-ci-cd-app-production.up.railway.app/health || exit 1
        curl -f https://my-ci-cd-app-production.up.railway.app/metrics || exit 1
        echo "‚úÖ All post-deployment tests passed!"